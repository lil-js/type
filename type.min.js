/*! lil-type - v0.1 - MIT License - https://github.com/lil-js/type */
(function(e,t){if(typeof define==="function"&&define.amd){define(["exports"],t)}else if(typeof exports==="object"){t(exports);if(typeof module==="object"&&module!==null){module.exports=exports}}else{t(e.lil=e.lil||{})}})(this,function(e){var t="0.1.0";var n=Object.prototype.toString;var r=isFinite;var i=Array.isArray;var o=Object.keys;var u=["Boolean","NaN","Number","String","Null","Undefined","RegExp","Date","Function","Symbol","Arguments","Error","Array","Element","Object"];e.type={VERSION:t};function f(e){return e===null}e.isNull=f;function l(e){return e&&n.call(e)==="[object Object]"||false}e.isObject=l;e.isPlainObject=function x(e){return l(e)&&l(Object.getPrototypeOf(e))&&f(Object.getPrototypeOf(Object.getPrototypeOf(e)))};function c(e){return i?i(e):e&&n.call(e)==="[object Array]"||false}e.isArray=c;function s(e){return typeof e==="function"}e.isFn=e.isFunction=s;function a(e){return e===true||e===false||e&&n.call(e)==="[object Boolean]"||false}e.isBool=e.isBoolean=a;function b(e){return e&&n.call(e)==="[object Date]"||false}e.isDate=b;e.isElement=function v(e){return e&&e.nodeType===1||false};function p(e){return typeof e==="string"||e&&typeof e==="object"&&n.call(e)==="[object String]"||false}e.isString=p;function y(e){return typeof e==="number"||e&&typeof e==="object"&&n.call(e)==="[object Number]"||false}e.isNumber=y;function j(e){return e&&n.call(e)==="[object RegExp]"||false}e.isRegExp=j;function m(e){return y(e)&&e!=+e}e.isNaN=m;e.isFinite=function A(e){return r(e)&&!m(parseFloat(e))||false};function d(e){return e&&n.call(e).indexOf("Error")!==-1||false}e.isError=d;function g(e){return typeof e==="undefined"}e.isUndefined=g;function O(e){return e&&n.call(e)==="[object Symbol]"||false}e.isSymbol=O;function E(e){return e&&n.call(e)==="[object Arguments]"||false}e.isArguments=E;function N(e){if(!e)return true;if(p(e)||c(e))return e.length===0;if(l(e))return o(e).length===0;return false}e.isEmpty=N;e.notEmpty=function(e){return!N(e)};e.isMutable=function S(e){return l(e)||c(e)||d(e)||E(e)||b(e)||s(e)||false};e.isIterable=function F(e){return l(e)||c(e)||E(e)||false};e.isPrimitive=function(e){return a(e)||p(e)||y(e)||s(e)||f(e)||g(e)||j(e)||O(e)||false};e.is=e.isType=function P(t){for(var n=0,r=u.length;n<r;n+=1){if(e["is"+u[n]](t)){return u[n].toLowerCase()}}return"undefined"}});
//# sourceMappingURL=type.min.js.map